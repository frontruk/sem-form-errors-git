{"version":3,"file":"frontr-ngformerrors.js.map","sources":["ng://@frontr/ngformerrors/lib/utils/toArray.ts","ng://@frontr/ngformerrors/lib/sem-form-errors.directive.ts","ng://@frontr/ngformerrors/lib/sem-form-error.directive.ts","ng://@frontr/ngformerrors/lib/sem-form-errors.module.ts"],"sourcesContent":["import {ErrorOptions} from '../ngxerrors';\n\nexport const toArray = (value: ErrorOptions): string[] =>\n  Array.isArray(value) ? value : [value];\n","import {\n  AfterViewInit,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy\n} from '@angular/core';\nimport {AbstractControl, FormGroupDirective} from '@angular/forms';\nimport {BehaviorSubject} from 'rxjs';\nimport {ErrorDetails, ErrorOptions} from './ngxerrors';\nimport {toArray} from './utils/toArray';\n\n@Directive({\n  selector: '[ngxErrors]',\n  exportAs: 'ngxErrors'\n})\nexport class SemFormErrorsDirective implements OnChanges, OnDestroy, AfterViewInit {\n  @Input('ngxErrors') private readonly controlName: string;\n\n  public subject$: BehaviorSubject<ErrorDetails>;\n  public control: AbstractControl;\n  private ready: boolean = false;\n\n  constructor(private form: FormGroupDirective) {}\n\n  get errors() {\n    if (!this.ready) return;\n    return this.control.errors;\n  }\n\n  get hasErrors() {\n    return !!this.errors;\n  }\n\n  hasError(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('invalid', name, conditions);\n  }\n\n  isValid(name: string, conditions: ErrorOptions): boolean {\n    return this.checkPropState('valid', name, conditions);\n  }\n\n  getError(name: string) {\n    if (!this.ready) return;\n    return this.control.getError(name);\n  }\n\n  private checkPropState(\n    prop: string,\n    name: string,\n    conditions: ErrorOptions\n  ): boolean {\n    if (!this.ready) return;\n\n    const controlPropsState =\n      !conditions ||\n      toArray(conditions).every((condition: string) => this.control[condition]);\n\n    if (name.charAt(0) === '*') {\n      return this.control[prop] && controlPropsState;\n    }\n\n    return prop === 'valid'\n      ? !this.control.hasError(name)\n      : this.control.hasError(name) && controlPropsState;\n  }\n\n  private checkStatus() {\n    const control = this.control;\n    const errors = control.errors;\n    this.ready = true;\n    if (!errors) return;\n    for (const errorName in errors) {\n      this.subject$.next({control, errorName});\n    }\n  }\n  ngOnInit() {\n    this.subject$ = new BehaviorSubject<ErrorDetails>(null);\n  }\n\n  ngOnChanges() {\n    this.control = this.form.control.get(this.controlName);\n  }\n\n  ngAfterViewInit() {\n    setTimeout(() => {\n      this.checkStatus();\n      this.control.statusChanges.subscribe(\n        this.checkStatus.bind(this),\n        () => console.log('error'),\n        () => console.log('completed')\n      );\n    });\n  }\n\n  ngOnDestroy() {\n    this.subject$.complete();\n  }\n}\n","import {\n  Directive,\n  DoCheck,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\nimport {combineLatest, Observable, Subject, Subscription} from 'rxjs';\nimport {distinctUntilChanged, filter, map} from 'rxjs/operators';\nimport {ErrorOptions} from './ngxerrors';\nimport {SemFormErrorsDirective} from './sem-form-errors.directive';\nimport {toArray} from './utils/toArray';\n\n@Directive({\n  selector: '[ngxError]'\n})\nexport class SemFormErrorDirective implements OnInit, OnDestroy, DoCheck {\n  @Input()\n  set ngxError(value: ErrorOptions) {\n    this.errorNames = toArray(value);\n  }\n\n  @Input()\n  set when(value: ErrorOptions) {\n    this.rules = toArray(value);\n  }\n\n  @HostBinding('hidden') public hidden: boolean = true;\n\n  private rules: string[] = [];\n  private errorNames: string[] = [];\n  private subscription: Subscription;\n  private _states$: Subject<string[]>;\n  private states$: Observable<string[]>;\n\n  constructor(\n    @Inject(forwardRef(() => SemFormErrorsDirective))\n    private ngxErrors: SemFormErrorsDirective\n  ) {}\n\n  ngOnInit() {\n    this._states$ = new Subject<string[]>();\n    this.states$ = this._states$.asObservable().pipe(distinctUntilChanged());\n\n    const errors = this.ngxErrors.subject$.pipe(\n      filter(Boolean),\n      filter(obj => !!~this.errorNames.indexOf(obj.errorName))\n    );\n\n    const states = this.states$.pipe(\n      map(states => this.rules.every(rule => !!~states.indexOf(rule)))\n    );\n\n    this.subscription = combineLatest(states, errors).subscribe(\n      ([states, errors]) => {\n        this.hidden = !(states && errors.control.hasError(errors.errorName));\n      }\n    );\n  }\n\n  ngDoCheck() {\n    this._states$.next(\n      this.rules.filter(rule => (this.ngxErrors.control as any)[rule])\n    );\n  }\n\n  ngOnDestroy() {\n    this._states$.complete();\n    this.subscription.unsubscribe();\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport {SemFormErrorsDirective} from './sem-form-errors.directive';\nimport {SemFormErrorDirective} from './sem-form-error.directive';\n\nconst dependencies = [SemFormErrorsDirective, SemFormErrorDirective];\n\n@NgModule({\n  declarations: [...dependencies],\n  imports: [\n  ],\n  exports: [...dependencies]\n})\nexport class SemFormErrorsModule { }\n"],"names":[],"mappings":";;;;;;;;;;AAEA,MAAa,OAAO;;;;AAAG,CAAC,KAAmB,KACzC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK,GAAG,CAAC,KAAK,CAAC,CAAA;;;;;;ACHxC,MAgBa,sBAAsB;;;;IAOjC,YAAoB,IAAwB;QAAxB,SAAI,GAAJ,IAAI,CAAoB;QAFpC,UAAK,GAAY,KAAK,CAAC;KAEiB;;;;IAEhD,IAAI,MAAM;QACR,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;;;;IAED,IAAI,SAAS;QACX,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;KACtB;;;;;;IAED,QAAQ,CAAC,IAAY,EAAE,UAAwB;QAC7C,OAAO,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;KACzD;;;;;;IAED,OAAO,CAAC,IAAY,EAAE,UAAwB;QAC5C,OAAO,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;KACvD;;;;;IAED,QAAQ,CAAC,IAAY;QACnB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;QACxB,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;KACpC;;;;;;;;IAEO,cAAc,CACpB,IAAY,EACZ,IAAY,EACZ,UAAwB;QAExB,IAAI,CAAC,IAAI,CAAC,KAAK;YAAE,OAAO;;cAElB,iBAAiB,GACrB,CAAC,UAAU;YACX,OAAO,CAAC,UAAU,CAAC,CAAC,KAAK;;;;YAAC,CAAC,SAAiB,KAAK,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAC;QAE3E,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;YAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC;SAChD;QAED,OAAO,IAAI,KAAK,OAAO;cACnB,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;cAC5B,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,iBAAiB,CAAC;KACtD;;;;;IAEO,WAAW;;cACX,OAAO,GAAG,IAAI,CAAC,OAAO;;cACtB,MAAM,GAAG,OAAO,CAAC,MAAM;QAC7B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,MAAM;YAAE,OAAO;QACpB,KAAK,MAAM,SAAS,IAAI,MAAM,EAAE;YAC9B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;SAC1C;KACF;;;;IACD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,eAAe,CAAe,IAAI,CAAC,CAAC;KACzD;;;;IAED,WAAW;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACxD;;;;IAED,eAAe;QACb,UAAU;;;QAAC;YACT,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,SAAS,CAClC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;;YAC3B,MAAM,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;;;YAC1B,MAAM,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,EAC/B,CAAC;SACH,EAAC,CAAC;KACJ;;;;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;;;YArFF,SAAS,SAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,QAAQ,EAAE,WAAW;aACtB;;;;YARwB,kBAAkB;;;0BAUxC,KAAK,SAAC,WAAW;;;;;;;ACjBpB,MAmBa,qBAAqB;;;;IAmBhC,YAEU,SAAiC;QAAjC,cAAS,GAAT,SAAS,CAAwB;QAVb,WAAM,GAAY,IAAI,CAAC;QAE7C,UAAK,GAAa,EAAE,CAAC;QACrB,eAAU,GAAa,EAAE,CAAC;KAQ9B;;;;;IArBJ,IACI,QAAQ,CAAC,KAAmB;QAC9B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;KAClC;;;;;IAED,IACI,IAAI,CAAC,KAAmB;QAC1B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;KAC7B;;;;IAeD,QAAQ;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,EAAY,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,CAAC;;cAEnE,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CACzC,MAAM,CAAC,OAAO,CAAC,EACf,MAAM;;;;QAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,EAAC,CACzD;;cAEK,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAC9B,GAAG;;;;QAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK;;;;QAAC,IAAI,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,EAAC,CACjE;QAED,IAAI,CAAC,YAAY,GAAG,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,SAAS;;;;QACzD,CAAC,CAAC,MAAM,EAAE,MAAM,CAAC;YACf,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM,IAAI,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC;SACtE,EACF,CAAC;KACH;;;;IAED,SAAS;QACP,IAAI,CAAC,QAAQ,CAAC,IAAI,CAChB,IAAI,CAAC,KAAK,CAAC,MAAM;;;;QAAC,IAAI,IAAI,oBAAC,IAAI,CAAC,SAAS,CAAC,OAAO,IAAS,IAAI,CAAC,EAAC,CACjE,CAAC;KACH;;;;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACzB,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;;YAxDF,SAAS,SAAC;gBACT,QAAQ,EAAE,YAAY;aACvB;;;;YALO,sBAAsB,uBA0BzB,MAAM,SAAC,UAAU;;;oBAAC,MAAM,sBAAsB,EAAC;;;uBAnBjD,KAAK;mBAKL,KAAK;qBAKL,WAAW,SAAC,QAAQ;;;;;;;AC9BvB;MAKM,YAAY,GAAG,CAAC,sBAAsB,EAAE,qBAAqB,CAAC;AAQpE,MAAa,mBAAmB;;;YAN/B,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,GAAG,YAAY,CAAC;gBAC/B,OAAO,EAAE,EACR;gBACD,OAAO,EAAE,CAAC,GAAG,YAAY,CAAC;aAC3B;;;;;;;;;;;;;;;"}
